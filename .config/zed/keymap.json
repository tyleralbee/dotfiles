[
    {
        "bindings": {
            // Open/Close Terminal
            "ctrl-shift-i": "workspace::ToggleBottomDock",

            "alt-[": "workspace::ToggleLeftDock",
            "alt-]": "workspace::ToggleRightDock",

            "alt-,": "zed::OpenSettings",
            "alt-.": "zed::OpenKeymap",

            "alt-<": "zed::OpenDefaultSettings",
            "alt->": "zed::OpenDefaultKeymap",
            "alt-shift-/": "vim::OpenDefaultKeymap",

            // Project file search, command palette
            "alt-j": "menu::SelectNext",
            "alt-k": "menu::SelectPrevious"
        }
    },
    {
        "context": "Workspace",
        "bindings": {
            // Prefix key
            "alt-a": null,
            "alt-a x": "pane::CloseActiveItem",
            "alt-a ctrl-r": "git::Restore",

            "alt-shift-a": "agent::ToggleFocus",
            "alt-shift-g": "git_panel::ToggleFocus",
            "alt-shift-p": "project_panel::ToggleFocus",

            // Pane navigation
            "alt-h": "workspace::ActivatePaneLeft",
            "alt-j": "workspace::ActivatePaneDown",
            "alt-k": "workspace::ActivatePaneUp",
            "alt-l": "workspace::ActivatePaneRight"
        }
    },
    {
        "context": "Editor",
        "bindings": {
            "ctrl-.": "editor::ToggleCodeActions",
            "ctrl-j": "editor::AddSelectionBelow",
            "ctrl-k": "editor::AddSelectionAbove",

            "ctrl-shift-j": "editor::MoveLineDown",
            "ctrl-shift-k": "editor::MoveLineUp",

            "alt-f": "editor::Format",
            "alt-space": "editor::ToggleCodeActions",

            "alt-shift-i": "editor::SplitSelectionIntoLines",
            "alt-shift-r": "editor::RestartLanguageServer",
            "alt-shift-h": "pane::SplitLeft",
            "alt-shift-l": "pane::SplitRight"
        }
    },
    // Remove collaborator panel keybind
    {
        "context": "!Terminal",
        "bindings": {
            "ctrl-shift-c": "editor::Copy"
        }
    },
    // Alias ctrl-w commands
    {
        "context": "VimControl && !menu",
        "bindings": {
            "alt-a d": "editor::GoToDefinitionSplit",
            "alt-a g d": "editor::GoToDefinitionSplit",
            "alt-a shift-d": "editor::GoToTypeDefinitionSplit",
            "alt-a g shift-d": "editor::GoToTypeDefinitionSplit",
            "alt-a space": "editor::OpenExcerptsSplit",
            "alt-a g space": "editor::OpenExcerptsSplit"
        }
    },
    // Alias ctrl-x commands
    {
        "context": "vim_mode == insert",
        "bindings": {
            "alt-a o": "editor::ShowCompletions",
            "alt-a a": "assistant::InlineAssist", // zed specific
            "alt-a c": "editor::ShowEditPrediction", // zed specific
            "alt-a l": "editor::ToggleCodeActions", // zed specific
            "alt-a z": "editor::Cancel"
        }
    },
    // Use neovim's yank behavior: yank to end of line.
    {
        "context": "vim_mode == normal && !menu",
        "bindings": {
            "shift-y": ["workspace::SendKeystrokes", "y $"]
        }
    },
    // Multicursor in normal, visual, operator, and insert modes if not in a menu
    {
        "context": "(VimControl || vim_mode == insert) && !menu",
        "bindings": {}
    },
    // vim-surround
    {
        "context": "vim_mode == visual",
        "bindings": {
            "alt-s": "editor::SortLinesCaseInsensitive",
            "s": ["vim::PushAddSurrounds", {}]
        }
    },
    // vim-sneak
    {
        "context": "vim_mode == normal",
        "bindings": {
            "s": "vim::PushSneak",
            "shift-s": "vim::PushSneakBackward"
        }
    },
    {
        "context": "Editor && !menu",
        "bindings": {
            // vim default: return to normal mode
            "ctrl-c": "editor::Copy",
            // vim default: decrement
            "ctrl-x": "editor::Cut",
            // vim default: visual block mode
            "ctrl-v": "editor::Paste",
            // vim default: page down
            "ctrl-f": "buffer_search::Deploy"
        }
    },
    // Code Actions, Autocomplete
    {
        "context": "Editor && (showing_code_actions || showing_completions)",
        "bindings": {
            "alt-j": "editor::ContextMenuNext",
            "alt-k": "editor::ContextMenuPrevious"
        }
    },
    // Custom formatters
    {
        "context": "Editor && (extension == tf || extension == tfvars)",
        "bindings": {
            "alt-f": [
                "task::Spawn",
                {
                    "task_name": "Format OpenTofu File",
                    "reveal_target": "dock" // doesn't actually pull up the terminal on error
                    // "reveal_target": "center" // causes screen flicker, but does pull up the terminal
                }
            ]
        }
    },
    // Mirror `.obsidian/keymap.json` for Markdown
    {
        "context": "Editor && extension==md",
        "bindings": {
            // "ctrl-0": "editor:remove-heading"
            "ctrl-0": [
                "workspace::SendKeystrokes",
                "escape m m v : s / \\ ( ^ # * \\ s | ^ \\ s | ^ \\ ) / / enter escape ` m"
            ],
            // "ctrl-1": "editor:set-heading-1"
            "ctrl-1": [
                "workspace::SendKeystrokes",
                "escape m m v : s / \\ ( ^ # * \\ s | ^ \\ s | ^ \\ ) / # space / enter escape ` m"
            ],
            // "ctrl-2": "editor:set-heading-2"
            "ctrl-2": [
                "workspace::SendKeystrokes",
                "escape m m v : s / \\ ( ^ # * \\ s | ^ \\ s | ^ \\ ) / # # space / enter escape ` m"
            ],
            // "ctrl-3": "editor:set-heading-3"
            "ctrl-3": [
                "workspace::SendKeystrokes",
                "escape m m v : s / \\ ( ^ # * \\ s | ^ \\ s | ^ \\ ) / # # # space / enter escape ` m"
            ],
            // "ctrl-4": "editor:set-heading-4"
            "ctrl-4": [
                "workspace::SendKeystrokes",
                "escape m m v : s / \\ ( ^ # * \\ s | ^ \\ s | ^ \\ ) / # # # # space / enter escape ` m"
            ],
            // "ctrl-5": "editor:set-heading-5"
            "ctrl-5": [
                "workspace::SendKeystrokes",
                "escape m m v : s / \\ ( ^ # * \\ s | ^ \\ s | ^ \\ ) / # # # # # space / enter escape ` m"
            ],
            // "ctrl-6": "editor:set-heading-6"
            "ctrl-6": [
                "workspace::SendKeystrokes",
                "escape m m v : s / \\ ( ^ # * \\ s | ^ \\ s | ^ \\ ) / # # # # # # space / enter escape ` m"
            ],
            // "Insert code block" (needs improvement)
            "ctrl-~": [
                "workspace::SendKeystrokes",
                "escape i ` ` ` b a s h enter ` ` ` escape O"
            ],
            "ctrl-v": "editor::Paste"
            
            // TODO: Implement the rest of the keybindings
            // 
            // "alt-/": "templater-obsidian:templates/template-info.md",
            // "alt-b": "editor:toggle-bullet-list",
            // "alt-c": "templater-obsidian:templates/template-task.md",
            // "alt-d": "insert-current-date",
            // "alt-enter": "templater-obsidian:jump-to-next-cursor-location",
            // "alt-g": "link-with-alias:create-link-with-alias",
            // "alt-i": "editor:toggle-italics",
            // "alt-m": "editor:toggle-inline-math",
            // "alt-n": "editor:toggle-numbered-list",
            // "alt-o": "link-with-alias:toggle-link-display-text",
            // "alt-s": "editor:toggle-source",
            // "alt-shift-d": "templater-obsidian:insert-templates/date.md",
            // "alt-shift-e": "open-with-default-app:show",
            // "alt-shift-m": "file-explorer:move-file",
            // "alt-shift-t": "templater-obsidian:templates/template-time.md",
            // "alt-shift-z": "editor:fold-all",
            // "alt-t": "insert-current-time",
            // "alt-w": "table-editor-obsidian:evaluate-formulas",
            // "alt-x": "templater-obsidian:templates/template-index.md",
            // "alt-y": "editor:toggle-highlight",
            // "alt-z": "editor:toggle-fold",
            // "ctrl-'": "mrj-jump-to-link:activate-jump-to-link",
            // "ctrl-`": "editor:toggle-code",
            // "ctrl-b": "editor:toggle-bold",
            // "ctrl-g": "editor:insert-link",
            // "ctrl-shift-c": "obsidian-tasks-plugin:toggle-done"
        }
    },
    {
        "context": "Editor && extension==md && vim_mode==visual",
        "bindings": {
            "ctrl-~": [
                "workspace::SendKeystrokes",
                "s ` a ` ` b a s h space escape d f ` o escape p f ` i enter ` ` escape b i backspace escape B i backspace escape V <"
            ]
        }
    }
]
