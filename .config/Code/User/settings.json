{
    // Editor settings
    "editor.autoClosingBrackets": "never",
    "editor.autoClosingDelete": "never",
    "editor.autoClosingQuotes": "never",
    "editor.inlineSuggest.enabled": true,
    "editor.linkedEditing": true,
    "editor.minimap.enabled": false,
    "editor.mouseWheelScrollSensitivity": 2,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "files.autoSave": "afterDelay",
    "keyboard.dispatch": "keyCode",
    "security.workspace.trust.untrustedFiles": "open",
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.fontFamily": "Droid Sans Mono for Powerline",
    "window.zoomLevel": -1,
    "workbench.startupEditor": "none",

    // vscodevim overrides
    "vim.handleKeys": {
        "<C-p>": false, // Loses: autocomplete previous match before cursor in INSERT | Gains: VSCode file search
        "<C-j>": false // Loses: add line break at cursor in INSERT | Gains: VSCode terminal open
    },

    // IDE errors and warnings
    "errorLens.disableLineComments": {
        "typescript": "// @ts-ignore"
    },
    "errorLens.excludeBySource": [
        "eslint(@typescript-eslint/no-unused-vars)",
        "ts(6133)"
    ],
    "errorLens.messageTemplate": "$source($severity: $code) $message",

    // JavaScript/TypeScript settings
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.updateImportsOnFileMove.enabled": "always",

    // Python settings
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.userFileIndexingLimit": -1,

    // Copilot/Git-related settings
    "github.copilot.editor.enableAutoCompletions": true,
    "github.copilot.enable": {
        "*": true,
        "plaintext": "true",
        "markdown": "true"
    },
    "gitlens.currentLine.format": "${agoOrDate}",
    "gitlens.currentLine.pullRequests.enabled": false,
    "git.openRepositoryInParentFolders": "always",

    // Azure settings
    "azureFunctions.showProjectWarning": false,

    // Default formatters; use Prettier where possible
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "[env]": {
        "editor.defaultFormatter": "IronGeek.vscode-env"
    },
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff"
    },
    "[sql]": {
        "editor.defaultFormatter": "ms-mssql.mssql"
    },
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml"
    },
    "[xml]": {
        "editor.defaultFormatter": "redhat.vscode-xml"
    },

    // Fallback formatting settings (prefer Workspace settings)
    "markdown.extension.list.indentationSize": "inherit",
    "markdown.extension.toc.orderedList": true,
    "prettier.tabWidth": 4,
    "prettier.trailingComma": "es5",

    // Telemetry settings
    "redhat.telemetry.enabled": false,
    "telemetry.telemetryLevel": "off",

    // Tips & tricks
    "totalTypeScript.hideAllTips": false,
    "totalTypeScript.hideBasicTips": true,
    "totalTypeScript.hiddenTips": [
        "as-const",
        "passing-generics-to-types",
        "generic-slots-in-functions",
        "typeof",
        "record-utility-type",
        "keyof",
        "type-predicate",
        "bigint",
        "as-const-on-object",
        "omit-utility-type",
        "required-utility-type",
        "pick-utility-type",
        "mapped-type",
        "tuple-type",
        "interface-with-generics",
        "interface-with-multiple-generics",
        "readonly-utility-type",
        "conditional-type",
        "type-alias-with-generics",
        "never-keyword",
        "partial-utility-type",
        "non-null-expression",
        "uppercase-utility-type",
        "returntype-utility-type",
        "in-operator-narrowing",
        "type-alias-with-multiple-generics",
        "infer",
        "extract-utility-type",
        "parameters-utility-type"
    ]
}
